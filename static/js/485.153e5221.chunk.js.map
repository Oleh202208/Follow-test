{"version":3,"file":"static/js/485.153e5221.chunk.js","mappings":"2MAEaA,EAAYC,EAAAA,GAAAA,OAAH,idCCTC,EAAYD,EAAAA,GAAAA,IAAH,+CASTE,IALcF,EAAAA,EAAAA,IAAOD,EAAPC,CAAH,+DAKAA,EAAAA,EAAAA,IAAOD,EAAPC,CAAH,gI,qDCRrB,aAAO,OAAP,oBAAO,oGACkBG,EAAAA,EAAAA,IAAU,UAD5B,cACCC,EADD,yBAEEA,EAASC,MAFX,kEAFPF,EAAAA,EAAAA,SAAAA,QAAyB,8C,sBCAZG,EAAS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACvB,OAAO,SAACR,EAAD,CAAWS,KAAK,SAAhB,SAA0BD,GAClC,ECFYE,EAAa,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC3B,OACE,+BACE,2BACE,gBAAKC,IAAKD,EAAKE,OAAQC,IAAI,YAC3B,yBAAIH,EAAKI,OAAT,cACA,yBAAIJ,EAAKK,UAAT,iBACA,SAACT,EAAD,CAAQC,KAAK,eAIpB,ECXYS,EAAa,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3B,OACE,wBACGA,EAAMC,KAAI,SAAAR,GACT,OAAO,SAACD,EAAD,CAA0BC,KAAMA,GAAfA,EAAKS,GAC9B,KAGN,ECuBD,EAzBmB,WAAO,IAAD,IACjBC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOL,EAAP,KAAcQ,EAAd,KASA,OAPAC,EAAAA,EAAAA,YAAU,YJTL,WAAP,gCIUIC,GACGC,MAAK,SAAAvB,GAAI,OAAIoB,EAASpB,EAAb,GAAoBmB,GAAa,IAC1CK,OAAM,SAAAC,GAAK,OAAIA,EAAMC,OAAV,IACXC,QAAQR,GAAa,GACzB,GAAE,KAGD,+BACE,UAACvB,EAAD,YACE,SAACC,EAAD,CAAU+B,GAAIC,EAAAA,GAAMC,GAAE,oBAAEf,EAASgB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAhD,qBAGCd,IAAa,SAACe,EAAA,EAAD,IACbrB,IAAS,SAACD,EAAD,CAAYC,MAAOA,QAIpC,C","sources":["components/Button/Button.styled.jsx","Page/TweetsPage/TweetsPage.styled.jsx","services/fetch.js","components/Button/Button.js","components/TweetsItem/TweetsItem.js","components/TweetsList/TweetsList.js","Page/TweetsPage/TweetsPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledBtn = styled.button`\n  width: 196px;\n  height: 50px;\n  padding: 14px 28px;\n\n  background-color: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n\n  font-family: 'MontserratSemiBold';\n  font-size: 18px;\n  line-height: 22px;\n  text-transform: uppercase;\n  color: #373737;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    background-color: #5cd3a8;\n  }\n`;\n","import { StyledBtn } from '../../components/Button/Button.styled';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 20px 15px;\n`;\n\nexport const LoadMoreBtn = styled(StyledBtn)`\n  display: block;\n  margin: 0 auto;\n`;\n\nexport const BackLink = styled(StyledBtn)`\n  display: flex;\n  align-items: center;\n  width: 140px;\n\n  color: #373737;\n  text-align: center;\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://64352994537112453fcf0726.mockapi.io';\n\nexport async function fetchTweets() {\n  const response = await axios.get('/users');\n  return response.data;\n}\n","import { StyledBtn } from './Button.styled';\n\nexport const Button = ({ text }) => {\n  return <StyledBtn type=\"button\">{text}</StyledBtn>;\n};\n","import { Button } from 'components/Button/Button';\n\nexport const TweetsItem = ({ user }) => {\n  return (\n    <>\n      <li>\n        <img src={user.avatar} alt=\"avatar\" />\n        <p>{user.tweets} tweets</p>\n        <p>{user.followers} followers</p>\n        <Button text=\"Follow\" />\n      </li>\n    </>\n  );\n};\n","import { TweetsItem } from 'components/TweetsItem/TweetsItem';\n\nexport const TweetsList = ({ users }) => {\n  return (\n    <ul>\n      {users.map(user => {\n        return <TweetsItem key={user.id} user={user} />;\n      })}\n    </ul>\n  );\n};\n","import { useLocation } from 'react-router-dom';\nimport { BackLink, Container } from './TweetsPage.styled';\nimport { Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchTweets } from 'services/fetch';\nimport { Loader } from 'components/Loader/Loader';\nimport { TweetsList } from 'components/TweetsList/TweetsList';\n\nconst TweetsPage = () => {\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    fetchTweets()\n      .then(data => setUsers(data), setIsLoading(true))\n      .catch(error => error.message)\n      .finally(setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <Container>\n        <BackLink as={Link} to={location.state?.from ?? '/'}>\n          Go back\n        </BackLink>\n        {isLoading && <Loader />}\n        {users && <TweetsList users={users} />}\n      </Container>\n    </>\n  );\n};\n\nexport default TweetsPage;\n"],"names":["StyledBtn","styled","Container","BackLink","axios","response","data","Button","text","type","TweetsItem","user","src","avatar","alt","tweets","followers","TweetsList","users","map","id","location","useLocation","useState","isLoading","setIsLoading","setUsers","useEffect","fetchTweets","then","catch","error","message","finally","as","Link","to","state","from","Loader"],"sourceRoot":""}